{"remainingRequest":"/Users/macbookpro/Desktop/PlanitFront/node_modules/thread-loader/dist/cjs.js!/Users/macbookpro/Desktop/PlanitFront/node_modules/babel-loader/lib/index.js!/Users/macbookpro/Desktop/PlanitFront/node_modules/vuetify/lib/mixins/bootable/index.js","dependencies":[{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/vuetify/lib/mixins/bootable/index.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gVXRpbGl0aWVzCmltcG9ydCB7IHJlbW92ZWQgfSBmcm9tICcuLi8uLi91dGlsL2NvbnNvbGUnOyAvLyBUeXBlcwoKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwovKioKICogQm9vdGFibGUKICogQG1peGluCiAqCiAqIFVzZWQgdG8gYWRkIGxhenkgY29udGVudCBmdW5jdGlvbmFsaXR5IHRvIGNvbXBvbmVudHMKICogTG9va3MgZm9yIGNoYW5nZSBpbiAiaXNBY3RpdmUiIHRvIGF1dG9tYXRpY2FsbHkgYm9vdAogKiBPdGhlcndpc2UgY2FuIGJlIHNldCBtYW51YWxseQogKi8KCi8qIEB2dWUvY29tcG9uZW50ICovCgpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKCkuZXh0ZW5kKHsKICBuYW1lOiAnYm9vdGFibGUnLAogIHByb3BzOiB7CiAgICBlYWdlcjogQm9vbGVhbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzQm9vdGVkOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBoYXNDb250ZW50OiBmdW5jdGlvbiBoYXNDb250ZW50KCkgewogICAgICByZXR1cm4gdGhpcy5pc0Jvb3RlZCB8fCB0aGlzLmVhZ2VyIHx8IHRoaXMuaXNBY3RpdmU7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgaXNBY3RpdmU6IGZ1bmN0aW9uIGlzQWN0aXZlKCkgewogICAgICB0aGlzLmlzQm9vdGVkID0gdHJ1ZTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLwogICAgaWYgKCdsYXp5JyBpbiB0aGlzLiRhdHRycykgewogICAgICByZW1vdmVkKCdsYXp5JywgdGhpcyk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzaG93TGF6eUNvbnRlbnQ6IGZ1bmN0aW9uIHNob3dMYXp5Q29udGVudChjb250ZW50KSB7CiAgICAgIHJldHVybiB0aGlzLmhhc0NvbnRlbnQgPyBjb250ZW50IDogdW5kZWZpbmVkOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["../../../src/mixins/bootable/index.ts"],"names":[],"mappings":"AAAA;AACA,SAAA,OAAA,QAAA,oBAAA,C,CAEA;;AACA,OAAA,GAAA,MAAA,KAAA;AAKA;;;;;;;;;AAQA;;AACA,eAAe,GAAG,CAAH,MAAA,GAAA,MAAA,CAAsC;AACnD,EAAA,IAAI,EAD+C,UAAA;AAGnD,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AADF,GAH4C;AAOnD,EAAA,IAAI,EAAE;AAAA,WAAO;AACX,MAAA,QAAQ,EAAE;AADC,KAAP;AAAA,GAP6C;AAWnD,EAAA,QAAQ,EAAE;AACR,IAAA,UADQ,wBACE;AACR,aAAO,KAAA,QAAA,IAAiB,KAAjB,KAAA,IAA+B,KAAtC,QAAA;AACD;AAHO,GAXyC;AAiBnD,EAAA,KAAK,EAAE;AACL,IAAA,QADK,sBACG;AACN,WAAA,QAAA,GAAA,IAAA;AACD;AAHI,GAjB4C;AAuBnD,EAAA,OAvBmD,qBAuB5C;AACL;AACA,QAAI,UAAU,KAAd,MAAA,EAA2B;AACzB,MAAA,OAAO,CAAA,MAAA,EAAP,IAAO,CAAP;AACD;AA3BgD,GAAA;AA8BnD,EAAA,OAAO,EAAE;AACP,IAAA,eADO,2BACQ,OADR,EAC2B;AAChC,aAAO,KAAA,UAAA,GAAA,OAAA,GAAP,SAAA;AACD;AAHM;AA9B0C,CAAtC,CAAf","sourcesContent":["// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: VNode[]): VNode[] | undefined {\n      return this.hasContent ? content : undefined\n    },\n  },\n})\n"],"sourceRoot":""}]}