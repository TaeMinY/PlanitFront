{"remainingRequest":"/Users/macbookpro/Desktop/PlanitFront/node_modules/thread-loader/dist/cjs.js!/Users/macbookpro/Desktop/PlanitFront/node_modules/babel-loader/lib/index.js!/Users/macbookpro/Desktop/PlanitFront/node_modules/vuetify/lib/mixins/intersectable/index.js","dependencies":[{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/vuetify/lib/mixins/intersectable/index.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gRGlyZWN0aXZlcwppbXBvcnQgSW50ZXJzZWN0IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvaW50ZXJzZWN0JzsgLy8gVXRpbGl0aWVzCgppbXBvcnQgeyBjb25zb2xlV2FybiB9IGZyb20gJy4uLy4uL3V0aWwvY29uc29sZSc7IC8vIFR5cGVzCgppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGludGVyc2VjdGFibGUob3B0aW9ucykgewogIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJyB8fCAhKCdJbnRlcnNlY3Rpb25PYnNlcnZlcicgaW4gd2luZG93KSkgewogICAgLy8gZG8gbm90aGluZyBiZWNhdXNlIGludGVyc2VjdGlvbiBvYnNlcnZlciBpcyBub3QgYXZhaWxhYmxlCiAgICByZXR1cm4gVnVlLmV4dGVuZCh7CiAgICAgIG5hbWU6ICdpbnRlcnNlY3RhYmxlJwogICAgfSk7CiAgfQoKICByZXR1cm4gVnVlLmV4dGVuZCh7CiAgICBuYW1lOiAnaW50ZXJzZWN0YWJsZScsCiAgICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICBJbnRlcnNlY3QuaW5zZXJ0ZWQodGhpcy4kZWwsIHsKICAgICAgICBuYW1lOiAnaW50ZXJzZWN0JywKICAgICAgICB2YWx1ZTogewogICAgICAgICAgaGFuZGxlcjogdGhpcy5vbk9ic2VydmUKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgICBJbnRlcnNlY3QudW5iaW5kKHRoaXMuJGVsKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIG9uT2JzZXJ2ZTogZnVuY3Rpb24gb25PYnNlcnZlKGVudHJpZXMsIG9ic2VydmVyLCBpc0ludGVyc2VjdGluZykgewogICAgICAgIGlmICghaXNJbnRlcnNlY3RpbmcpIHJldHVybjsKCiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IG9wdGlvbnMub25WaXNpYmxlLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgY2FsbGJhY2sgPSB0aGlzW29wdGlvbnMub25WaXNpYmxlW2ldXTsKCiAgICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgIGNhbGxiYWNrKCk7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQoKICAgICAgICAgIGNvbnNvbGVXYXJuKG9wdGlvbnMub25WaXNpYmxlW2ldICsgJyBtZXRob2QgaXMgbm90IGF2YWlsYWJsZSBvbiB0aGUgaW5zdGFuY2UgYnV0IHJlZmVyZW5jZWQgaW4gaW50ZXJzZWN0YWJsZSBtaXhpbiBvcHRpb25zJyk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSk7Cn0="},{"version":3,"sources":["../../../src/mixins/intersectable/index.ts"],"names":[],"mappings":"AAAA;AACA,OAAA,SAAA,MAAA,4BAAA,C,CAEA;;AACA,SAAA,WAAA,QAAA,oBAAA,C,CAEA;;AACA,OAAA,GAAA,MAAA,KAAA;AAEA,eAAc,SAAA,aAAA,CAAA,OAAA,EAAyD;AACrE,MAAI,OAAA,MAAA,KAAA,WAAA,IAAiC,EAAE,0BAAvC,MAAqC,CAArC,EAA0E;AACxE;AACA,WAAO,GAAG,CAAH,MAAA,CAAW;AAAE,MAAA,IAAI,EAAE;AAAR,KAAX,CAAP;AACD;;AAED,SAAO,GAAG,CAAH,MAAA,CAAW;AAChB,IAAA,IAAI,EADY,eAAA;AAGhB,IAAA,OAHgB,qBAGT;AACL,MAAA,SAAS,CAAT,QAAA,CAAmB,KAAnB,GAAA,EAA4C;AAC1C,QAAA,IAAI,EADsC,WAAA;AAE1C,QAAA,KAAK,EAAE;AACL,UAAA,OAAO,EAAE,KAAK;AADT;AAFmC,OAA5C;AAJc,KAAA;AAYhB,IAAA,SAZgB,uBAYP;AACP,MAAA,SAAS,CAAT,MAAA,CAAiB,KAAjB,GAAA;AAbc,KAAA;AAgBhB,IAAA,OAAO,EAAE;AACP,MAAA,SADO,qBACE,OADF,EACE,QADF,EACE,cADF,EACiG;AACtG,YAAI,CAAJ,cAAA,EAAqB;;AAErB,aAAK,IAAI,CAAC,GAAL,CAAA,EAAW,MAAM,GAAG,OAAO,CAAP,SAAA,CAAzB,MAAA,EAAmD,CAAC,GAApD,MAAA,EAA+D,CAA/D,EAAA,EAAoE;AAClE,cAAM,QAAQ,GAAI,KAAa,OAAO,CAAP,SAAA,CAA/B,CAA+B,CAAb,CAAlB;;AAEA,cAAI,OAAA,QAAA,KAAJ,UAAA,EAAoC;AAClC,YAAA,QAAQ;AACR;AACD;;AAED,UAAA,WAAW,CAAC,OAAO,CAAP,SAAA,CAAA,CAAA,IAAZ,wFAAW,CAAX;AACD;AACF;AAdM;AAhBO,GAAX,CAAP;AAiCD","sourcesContent":["// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({ name: 'intersectable' })\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n        },\n      })\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n"],"sourceRoot":""}]}