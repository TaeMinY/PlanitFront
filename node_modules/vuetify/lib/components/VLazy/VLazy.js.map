{"version":3,"sources":["../../../src/components/VLazy/VLazy.ts"],"names":[],"mappings":"AAAA;AACA,OAAO,UAAP,MAAuB,yBAAvB,C,CAEA;;AACA,OAAO,SAAP,MAAsB,4BAAtB,C,CAEA;;AACA,OAAO,MAAP,MAAmB,mBAAnB;AACA,SAAS,aAAT,EAAwB,OAAxB,QAAuC,oBAAvC;AAMA,eAAe,MAAM,CAAC,UAAD,CAAN,CAAmB,MAAnB,CAA0B;AACvC,EAAA,IAAI,EAAE,OADiC;AAGvC,EAAA,UAAU,EAAE;AAAE,IAAA;AAAF,GAH2B;AAKvC,EAAA,KAAK,EAAE;AACL,IAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT,CADN;AAEL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,MADC;AAEP;AACA;AACA,MAAA,OAAO,EAAE,OAAO;AACd,QAAA,IAAI,EAAE,SADQ;AAEd,QAAA,UAAU,EAAE,SAFE;AAGd,QAAA,SAAS,EAAE;AAHG,OAAP;AAJF,KAFJ;AAYL,IAAA,GAAG,EAAE;AACH,MAAA,IAAI,EAAE,MADH;AAEH,MAAA,OAAO,EAAE;AAFN,KAZA;AAgBL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,MADI;AAEV,MAAA,OAAO,EAAE;AAFC;AAhBP,GALgC;AA2BvC,EAAA,QAAQ,EAAE;AACR,IAAA,MAAM,GAAA;AACJ,aAAO;AACL,QAAA,SAAS,EAAE,QAAQ,CAAC,KAAK,SAAN,CAAR,GAA2B,aAAa,CAAC,KAAK,SAAN,CAAxC,GAA2D,KAAK;AADtE,OAAP;AAGD;;AALO,GA3B6B;AAmCvC,EAAA,OAAO,EAAE;AACP,IAAA,UAAU,GAAA;AACR,YAAM,IAAI,GAAG,OAAO,CAAC,IAAD,CAApB;AAEA;;AACA,UAAI,CAAC,KAAK,UAAV,EAAsB,OAAO,IAAP;AAEtB,YAAM,QAAQ,GAAG,EAAjB;AAEA,UAAI,KAAK,QAAT,EAAmB,QAAQ,CAAC,IAAT,CAAc,IAAd;AAEnB,aAAO,KAAK,cAAL,CAAoB,YAApB,EAAkC;AACvC,QAAA,KAAK,EAAE;AAAE,UAAA,IAAI,EAAE,KAAK;AAAb;AADgC,OAAlC,EAEJ,QAFI,CAAP;AAGD,KAdM;;AAeP,IAAA,SAAS,CACP,OADO,EAEP,QAFO,EAGP,cAHO,EAGgB;AAEvB,UAAI,KAAK,QAAT,EAAmB;AAEnB,WAAK,QAAL,GAAgB,cAAhB;AACD;;AAvBM,GAnC8B;;AA6DvC,EAAA,MAAM,CAAE,CAAF,EAAG;AACP,WAAO,CAAC,CAAC,KAAK,GAAN,EAAW;AACjB,MAAA,WAAW,EAAE,QADI;AAEjB,MAAA,KAAK,EAAE,KAAK,MAFK;AAGjB,MAAA,UAAU,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,WADK;AAEX,QAAA,KAAK,EAAE;AACL,UAAA,OAAO,EAAE,KAAK,SADT;AAEL,UAAA,OAAO,EAAE,KAAK;AAFT;AAFI,OAAD,CAHK;AAUjB,MAAA,EAAE,EAAE,KAAK,UAVQ;AAWjB,MAAA,KAAK,EAAE,KAAK;AAXK,KAAX,EAYL,CAAC,KAAK,UAAL,EAAD,CAZK,CAAR;AAaD;;AA3EsC,CAA1B,CAAf","sourcesContent":["// Mixins\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { convertToUnit, getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport default mixins(Toggleable).extend({\n  name: 'VLazy',\n\n  directives: { intersect },\n\n  props: {\n    minHeight: [Number, String],\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    } as PropValidator<IntersectionObserverInit>,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    transition: {\n      type: String,\n      default: 'fade-transition',\n    },\n  },\n\n  computed: {\n    styles (): object {\n      return {\n        minHeight: parseInt(this.minHeight) ? convertToUnit(this.minHeight) : this.minHeight,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      const slot = getSlot(this)\n\n      /* istanbul ignore if */\n      if (!this.transition) return slot\n\n      const children = []\n\n      if (this.isActive) children.push(slot)\n\n      return this.$createElement('transition', {\n        props: { name: this.transition },\n      }, children)\n    },\n    onObserve (\n      entries: IntersectionObserverEntry[],\n      observer: IntersectionObserver,\n      isIntersecting: boolean,\n    ) {\n      if (this.isActive) return\n\n      this.isActive = isIntersecting\n    },\n  },\n\n  render (h): VNode {\n    return h(this.tag, {\n      staticClass: 'v-lazy',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n          options: this.options,\n        },\n      }],\n      on: this.$listeners,\n      style: this.styles,\n    }, [this.genContent()])\n  },\n})\n"],"sourceRoot":"","file":"VLazy.js"}