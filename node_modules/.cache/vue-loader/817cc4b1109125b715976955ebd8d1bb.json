{"remainingRequest":"/Users/macbookpro/Desktop/PlanitFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/Desktop/PlanitFront/src/views/main/calendar.vue?vue&type=style&index=0&id=13cf95ac&scoped=true&lang=css&","dependencies":[{"path":"/Users/macbookpro/Desktop/PlanitFront/src/views/main/calendar.vue","mtime":1585365607924},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/PlanitFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jYWxlbmRhciB7CiAgICB3aWR0aDogMTAwJTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYzZjU7CiAgICBwYWRkaW5nOiAzMHB4OwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwp9Ci5jYWxlbmRhcl90aXRsZSB7CiAgICBmb250LXNpemU6IDQwcHg7CiAgICBmb250LXN0eWxlOiBub3JtYWw7CiAgICBmb250LWZhbWlseTogUHJvZHVjdFNhbnNNOwogICAgY29sb3I6ICMwMDAwMDA7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgbWFyZ2luLXJpZ2h0OiAwOwogICAgbWFyZ2luLWJvdHRvbTogMDsKICAgIHBhZGRpbmc6IDA7Cn0KLmNhbGVuZGFyX21haW4gewogICAgLyptYXJnaW4tdG9wOjElOwoJYmFja2dyb3VuZC1jb2xvcjojZmZmOwoJYm9yZGVyLXJhZGl1czogMzZweDsqLwogICAgbWluLWhlaWdodDogODAlOwogICAgb3ZlcmZsb3cteDogaGlkZGVuOwp9Ci52LWlucHV0X19pY29uLS1hcHBlbmQgewogICAgb3ZlcmZsb3cteTogaGlkZGVuICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"calendar.vue","sourceRoot":"src/views/main","sourcesContent":["<template>\n    <div class=\"calendar\">\n        <p class=\"calendar_title\">Calendar</p>\n        <div class=\"calendar_main\">\n            <v-row class=\"fill-height\">\n                <v-col>\n                    <v-sheet height=\"64\">\n                        <v-toolbar flat color=\"white\">\n                            <v-btn outlined class=\"mr-4\" color=\"grey darken-2\" @click=\"setToday\">Today</v-btn>\n                            <v-btn fab text small color=\"grey darken-2\" @click=\"prev\">\n                                <v-icon small>mdi-chevron-left</v-icon>\n                            </v-btn>\n                            <v-btn fab text small color=\"grey darken-2\" @click=\"next\">\n                                <v-icon small>mdi-chevron-right</v-icon>\n                            </v-btn>\n                            <v-toolbar-title>{{ title }}</v-toolbar-title>\n                            <v-spacer></v-spacer>\n                        </v-toolbar>\n                    </v-sheet>\n                    <v-sheet height=\"600\">\n                        <v-calendar\n                            ref=\"calendar\"\n                            v-model=\"focus\"\n                            color=\"primary\"\n                            :events=\"events\"\n                            :event-color=\"getEventColor\"\n                            :now=\"today\"\n                            :type=\"type\"\n                            @click:event=\"showEvent\"\n                            @click:more=\"viewDay\"\n                            @click:date=\"viewDay\"\n                            @change=\"updateRange\"\n                        ></v-calendar>\n                        <v-menu v-model=\"selectedOpen\" :close-on-content-click=\"false\" :activator=\"selectedElement\" offset-x>\n                            <v-card color=\"grey lighten-4\" min-width=\"350px\" flat>\n                                <v-toolbar :color=\"selectedEvent.color\" dark>\n                                    <v-btn icon>\n                                        <v-icon>mdi-pencil</v-icon>\n                                    </v-btn>\n                                    <v-toolbar-title v-html=\"selectedEvent.name\"></v-toolbar-title>\n                                    <v-spacer></v-spacer>\n                                    <v-btn icon>\n                                        <v-icon>mdi-heart</v-icon>\n                                    </v-btn>\n                                    <v-btn icon>\n                                        <v-icon>mdi-dots-vertical</v-icon>\n                                    </v-btn>\n                                </v-toolbar>\n                                <v-card-text>\n                                    <span v-html=\"selectedEvent.details\"></span>\n                                </v-card-text>\n                                <v-card-actions>\n                                    <v-btn text color=\"secondary\" @click=\"selectedOpen = false\">Cancel</v-btn>\n                                </v-card-actions>\n                            </v-card>\n                        </v-menu>\n                    </v-sheet>\n                </v-col>\n            </v-row>\n        </div>\n        <div></div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data: () => ({\n        todoData: [],\n        focus: '',\n        type: 'month',\n        typeToLabel: {\n            month: 'Month',\n            week: 'Week',\n            day: 'Day',\n            '4day': '4 Days'\n        },\n        start: null,\n        end: null,\n        selectedEvent: {},\n        selectedElement: null,\n        selectedOpen: false,\n        events: [],\n        colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n        names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n        title: ''\n    }),\n    created() {\n\t\t\t  \tthis.$store.state.status.plans = false;\n\t\tthis.$store.state.status.calendar = true;\n\t  \tthis.$store.state.status.memo = false;\n        this.$store\n            .dispatch('FIND__DATA', {\n                token: localStorage.getItem('token')\n            })\n            .then(response => {\n                if (response.data.result == true) {\n                    this.todoData = response.data.userdata.todo;\n                    const events = [];\n                    for (let i = 0; i < this.todoData.length; i++) {\n                        events.push({\n                            name: this.todoData[i].title,\n                            start: this.todoData[i].endDay + ' 0:00',\n                            end: this.todoData[i].endDay + ' 23:59',\n                            color: this.colors[this.rnd(0, this.colors.length - 1)]\n                        });\n                    }\n                    this.events = events;\n                } else {\n                }\n            })\n            .catch(e => {\n            });\n    },\n    computed: {\n        title() {\n            const { start, end } = this;\n            if (!start || !end) {\n                return '';\n            }\n            const startMonth = this.monthFormatter(start);\n            const endMonth = this.monthFormatter(end);\n            const suffixMonth = startMonth === endMonth ? '' : endMonth;\n            const startYear = start.year;\n            const endYear = end.year;\n            const suffixYear = startYear === endYear ? '' : endYear;\n            const startDay = start.day + this.nth(start.day);\n            const endDay = end.day + this.nth(end.day);\n            switch (this.type) {\n                case 'month':\n                    return `${startMonth} ${startYear}`;\n                case 'week':\n                case '4day':\n                    return `${startMonth} ${startDay} ${startYear} - ${suffixMonth} ${endDay} ${suffixYear}`;\n                case 'day':\n                    return `${startMonth} ${startDay} ${startYear}`;\n            }\n            return '';\n        },\n        monthFormatter() {\n            return this.$refs.calendar.getFormatter({\n                timeZone: 'UTC',\n                month: 'long'\n            });\n        }\n    },\n    mounted() {\n        // this.$refs.calendar.checkChange()\n    },\n\tbeforeDestory(){\n  \t\tthis.$store.state.status.plans = false;\n\t\tthis.$store.state.status.calendar = false;\n\t  \tthis.$store.state.status.memo = false;\n\t},\n    methods: {\n        // viewDay ({ date }) {\n        //   this.focus = date\n        //   this.type = 'day'\n        // },\n        getEventColor(event) {\n            return event.color;\n        },\n        setToday() {\n            this.focus = this.today;\n        },\n        prev() {\n            this.$refs.calendar.prev();\n        },\n        next() {\n            this.$refs.calendar.next();\n        },\n        // showEvent ({ nativeEvent, event }) {\n        //   const open = () => {\n        //     this.selectedEvent = event\n        //     this.selectedElement = nativeEvent.target\n        //     setTimeout(() => this.selectedOpen = true, 10)\n        //   }\n        //   if (this.selectedOpen) {\n        //     this.selectedOpen = false\n        //     setTimeout(open, 10)\n        //   } else {\n        //     open()\n        //   }\n        //   nativeEvent.stopPropagation()\n        // },\n        updateRange({ start, end }) {\n            const events = [];\n\n            const min = new Date(`${start.date}T00:00:00`);\n            const max = new Date(`${end.date}T23:59:59`);\n            const days = (max.getTime() - min.getTime()) / 86400000;\n            const eventCount = this.rnd(days, days + 20);\n\n            for (let i = 0; i < this.todoData.length; i++) {\n                const allDay = this.rnd(0, 3) === 0;\n                const firstTimestamp = this.rnd(min.getTime(), max.getTime());\n                const first = new Date(firstTimestamp - (firstTimestamp % 900000));\n                const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000;\n                const second = new Date(first.getTime() + secondTimestamp);\n\n                events.push({\n                    name: this.todoData[i].title,\n                    start: this.todoData[i].endDay + ' 0:00',\n                    end: this.todoData[i].endDay + ' 23:59',\n                    color: this.colors[this.rnd(0, this.colors.length - 1)]\n                });\n            }\n            this.title = start.date.slice(0, 7);\n            this.start = start;\n            this.end = end;\n            this.events = events;\n        },\n        nth(d) {\n            return d > 3 && d < 21 ? 'th' : ['th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'][d % 10];\n        },\n        rnd(a, b) {\n            return Math.floor((b - a + 1) * Math.random()) + a;\n        },\n        formatDate(a, withTime) {\n            return withTime\n                ? `${a.getFullYear()}-${a.getMonth() + 1}-${a.getDate()} ${a.getHours()}:${a.getMinutes()}`\n                : `${a.getFullYear()}-${a.getMonth() + 1}-${a.getDate()}`;\n        }\n    }\n};\n</script>\n<style scoped>\n.calendar {\n    width: 100%;\n    background-color: #f1f3f5;\n    padding: 30px;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n.calendar_title {\n    font-size: 40px;\n    font-style: normal;\n    font-family: ProductSansM;\n    color: #000000;\n    text-align: left;\n    margin-left: 10px;\n    margin-top: 10px;\n    margin-right: 0;\n    margin-bottom: 0;\n    padding: 0;\n}\n.calendar_main {\n    /*margin-top:1%;\n\tbackground-color:#fff;\n\tborder-radius: 36px;*/\n    min-height: 80%;\n    overflow-x: hidden;\n}\n.v-input__icon--append {\n    overflow-y: hidden !important;\n}\n</style>\n"]}]}