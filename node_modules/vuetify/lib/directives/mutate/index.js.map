{"version":3,"sources":["../../../src/directives/mutate/index.ts"],"names":[],"mappings":"AAMA,SAAS,QAAT,CAAmB,EAAnB,EAAoC,OAApC,EAAiE;AAC/D,QAAM,SAAS,GAAG,OAAO,CAAC,SAAR;AAAqB;AAA2B,IAAlE;AACA,QAAM,KAAK,GAAG,OAAO,CAAC,KAAtB;AACA,QAAM,QAAQ,GAAG,OAAO,KAAP,KAAiB,QAAlC;AACA,QAAM,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC,OAAT,GAAmB,KAA5C;AACA,QAAM;AAAE,IAAA,IAAF;AAAQ,OAAG;AAAX,MAA4B,SAAlC;AACA,QAAM,YAAY,GAAG,MAAM,CAAC,IAAP,CAAY,YAAZ,EAA0B,MAA1B,GAAmC,CAAxD;AACA,QAAM,UAAU,GAAG,QAAQ,IAAI,KAAK,CAAC,OAArC,CAP+D,CAS/D;;AACA,QAAM,OAAO,GAAG,UAAU,GAAG,KAAK,CAAC,OAAT,GAAmB,YAAY,CACvD;AADuD,IAErD;AACA,IAAA,UAAU,EAAE,YAAY,CAAC,IADzB;AAEA,IAAA,SAAS,EAAE,YAAY,CAAC,KAFxB;AAGA,IAAA,OAAO,EAAE,YAAY,CAAC,GAHtB;AAIA,IAAA,aAAa,EAAE,YAAY,CAAC,IAJ5B,CAMF;;AANE,GAFqD,GASrD;AACA,IAAA,UAAU,EAAE,IADZ;AAEA,IAAA,SAAS,EAAE,IAFX;AAGA,IAAA,OAAO,EAAE,IAHT;AAIA,IAAA,aAAa,EAAE;AAJf,GATJ;AAgBA,QAAM,QAAQ,GAAG,IAAI,gBAAJ,CAAqB,CACpC,aADoC,EAEpC,QAFoC,KAGlC;AACF;AACA,QAAI,CAAC,EAAE,CAAC,OAAR,EAAiB,OAFf,CAEsB;;AAExB,IAAA,QAAQ,CAAC,aAAD,EAAgB,QAAhB,CAAR,CAJE,CAMF;;AACA,IAAA,IAAI,IAAI,MAAM,CAAC,EAAD,CAAd;AACD,GAXgB,CAAjB;AAaA,EAAA,QAAQ,CAAC,OAAT,CAAiB,EAAjB,EAAqB,OAArB;AACA,EAAA,EAAE,CAAC,OAAH,GAAa;AAAE,IAAA;AAAF,GAAb;AACD;;AAED,SAAS,MAAT,CAAiB,EAAjB,EAAgC;AAC9B;AACA,MAAI,CAAC,EAAE,CAAC,OAAR,EAAiB;;AAEjB,EAAA,EAAE,CAAC,OAAH,CAAW,QAAX,CAAoB,UAApB;;AACA,SAAO,EAAE,CAAC,OAAV;AACD;;AAED,OAAO,MAAM,MAAM,GAAG;AACpB,EAAA,QADoB;AAEpB,EAAA;AAFoB,CAAf;AAKP,eAAe,MAAf","sourcesContent":["import { VNodeDirective } from 'vue'\n\ninterface MutateVNodeDirective extends VNodeDirective {\n  options?: MutationObserverInit\n}\n\nfunction inserted (el: HTMLElement, binding: MutateVNodeDirective) {\n  const modifiers = binding.modifiers || /* istanbul ignore next */ {}\n  const value = binding.value\n  const isObject = typeof value === 'object'\n  const callback = isObject ? value.handler : value\n  const { once, ...modifierKeys } = modifiers\n  const hasModifiers = Object.keys(modifierKeys).length > 0\n  const hasOptions = isObject && value.options\n\n  // Options take top priority\n  const options = hasOptions ? value.options : hasModifiers\n    // If we have modifiers, use only those provided\n    ? {\n      attributes: modifierKeys.attr,\n      childList: modifierKeys.child,\n      subtree: modifierKeys.sub,\n      characterData: modifierKeys.char,\n    }\n    // Defaults to everything on\n    : {\n      attributes: true,\n      childList: true,\n      subtree: true,\n      characterData: true,\n    }\n\n  const observer = new MutationObserver((\n    mutationsList: MutationRecord[],\n    observer: MutationObserver\n  ) => {\n    /* istanbul ignore if */\n    if (!el._mutate) return // Just in case, should never fire\n\n    callback(mutationsList, observer)\n\n    // If has the once modifier, unbind\n    once && unbind(el)\n  })\n\n  observer.observe(el, options)\n  el._mutate = { observer }\n}\n\nfunction unbind (el: HTMLElement) {\n  /* istanbul ignore if */\n  if (!el._mutate) return\n\n  el._mutate.observer.disconnect()\n  delete el._mutate\n}\n\nexport const Mutate = {\n  inserted,\n  unbind,\n}\n\nexport default Mutate\n"],"sourceRoot":"","file":"index.js"}