{"version":3,"sources":["../../../src/services/theme/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as ThemeUtils from './utils'\n\n// Types\nimport Vue from 'vue'\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemes,\n  VuetifyThemeVariant,\n  Theme as ITheme,\n} from 'vuetify/types/services/theme'\n\nexport class Theme extends Service {\n  static property: 'theme' = 'theme'\n\n  public disabled = false\n\n  public options: ITheme['options']\n\n  public styleEl?: HTMLStyleElement\n\n  public themes: VuetifyThemes\n\n  public defaults: VuetifyThemes\n\n  private isDark = null as boolean | null\n\n  private vueInstance = null as Vue | null\n\n  private vueMeta = null as any | null\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      dark,\n      disable,\n      options,\n      themes,\n    } = preset[Theme.property]\n\n    this.dark = Boolean(dark)\n    this.defaults = this.themes = themes\n    this.options = options\n\n    if (disable) {\n      this.disabled = true\n\n      return\n    }\n\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false),\n    }\n  }\n\n  // When setting css, check for element\n  // and apply new values\n  set css (val: string) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23()\n      }\n      return\n    }\n    this.checkOrCreateStyleElement() && (this.styleEl!.innerHTML = val)\n  }\n\n  set dark (val: boolean) {\n    const oldDark = this.isDark\n\n    this.isDark = val\n    // Only apply theme after dark\n    // has already been set before\n    oldDark != null && this.applyTheme()\n  }\n\n  get dark () {\n    return Boolean(this.isDark)\n  }\n\n  // Apply current theme default\n  // only called on client side\n  public applyTheme (): void {\n    if (this.disabled) return this.clearCss()\n\n    this.css = this.generatedStyles\n  }\n\n  public clearCss (): void {\n    this.css = ''\n  }\n\n  // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n  public init (root: Vue, ssrContext?: any): void {\n    if (this.disabled) return\n\n    /* istanbul ignore else */\n    if ((root as any).$meta) {\n      this.initVueMeta(root)\n    } else if (ssrContext) {\n      this.initSSR(ssrContext)\n    }\n\n    this.initTheme()\n  }\n\n  // Allows for you to set target theme\n  public setTheme (theme: 'light' | 'dark', value: object) {\n    this.themes[theme] = Object.assign(this.themes[theme], value)\n    this.applyTheme()\n  }\n\n  // Reset theme defaults\n  public resetThemes () {\n    this.themes.light = Object.assign({}, this.defaults.light)\n    this.themes.dark = Object.assign({}, this.defaults.dark)\n    this.applyTheme()\n  }\n\n  // Check for existence of style element\n  private checkOrCreateStyleElement (): boolean {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet') as HTMLStyleElement\n\n    /* istanbul ignore next */\n    if (this.styleEl) return true\n\n    this.genStyleElement() // If doesn't have it, create it\n\n    return Boolean(this.styleEl)\n  }\n\n  private fillVariant (\n    theme: Partial<VuetifyThemeVariant> = {},\n    dark: boolean\n  ): VuetifyThemeVariant {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light']\n\n    return Object.assign({},\n      defaultTheme,\n      theme\n    )\n  }\n\n  // Generate the style element\n  // if applicable\n  private genStyleElement (): void {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return\n\n    /* istanbul ignore next */\n    const options = this.options || {}\n\n    this.styleEl = document.createElement('style')\n    this.styleEl.type = 'text/css'\n    this.styleEl.id = 'vuetify-theme-stylesheet'\n\n    if (options.cspNonce) {\n      this.styleEl.setAttribute('nonce', options.cspNonce)\n    }\n\n    document.head.appendChild(this.styleEl)\n  }\n\n  private initVueMeta (root: any) {\n    this.vueMeta = root.$meta()\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23()\n      })\n      return\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo'\n    const metaInfo = root.$options[metaKeyName] || {}\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || []\n\n      const vuetifyStylesheet = metaInfo.style.find((s: any) => s.id === 'vuetify-theme-stylesheet')\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce,\n        })\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles\n      }\n\n      return metaInfo\n    }\n  }\n\n  private applyVueMeta23 () {\n    const { set } = this.vueMeta.addApp('vuetify')\n\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: (this.options || {}).cspNonce,\n      }],\n    })\n  }\n\n  private initSSR (ssrContext?: any) {\n    const options = this.options || {}\n    // SSR\n    const nonce = options.cspNonce ? ` nonce=\"${options.cspNonce}\"` : ''\n    ssrContext.head = ssrContext.head || ''\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`\n  }\n\n  private initTheme () {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return\n\n    // If we get here somehow, ensure\n    // existing instance is removed\n    if (this.vueInstance) this.vueInstance.$destroy()\n\n    // Use Vue instance to track reactivity\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n    this.vueInstance = new Vue({\n      data: { themes: this.themes },\n\n      watch: {\n        themes: {\n          immediate: true,\n          deep: true,\n          handler: () => this.applyTheme(),\n        },\n      },\n    })\n  }\n\n  get currentTheme () {\n    const target = this.dark ? 'dark' : 'light'\n\n    return this.themes[target]\n  }\n\n  get generatedStyles (): string {\n    const theme = this.parsedTheme\n    /* istanbul ignore next */\n    const options = this.options || {}\n    let css\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme)\n      /* istanbul ignore if */\n      if (css != null) return css\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties)\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css)\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css)\n    }\n\n    return css\n  }\n\n  get parsedTheme (): VuetifyParsedTheme {\n    /* istanbul ignore next */\n    const theme = this.currentTheme || {}\n    return ThemeUtils.parse(theme)\n  }\n\n  // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n  private get isVueMeta23 (): boolean {\n    return typeof this.vueMeta.addApp === 'function'\n  }\n}\n"],"sourceRoot":"","file":"index.js"}